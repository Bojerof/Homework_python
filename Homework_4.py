# Даны два неупорядоченных набора целых чисел (может быть, с повторениями). Выдать без повторений в порядке 
# возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.

# n = int(input("Введите длину первого массива: "))
# list_1 = []
# for i in range(n):
#     list_1.append(int(input("Введите число: ")))
# m = int(input("Введите длину первого массива: "))
# list_2 = []
# for i in range(m):
#     list_2.append(int(input("Введите число: ")))
# list_new = []
# for i in list_1:
#     for j in list_2:
#         if i == j:
#             list_new.append(i)
#             list_new.sort()
# print(list_new)

# В фермерском хозяйстве в Карелии выращивают чернику. Она растет на круглой грядке, причем кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод – на i-ом кусте выросло ai ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. Эта система состоит из управляющего модуля и нескольких 
# собирающих модулей. Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с 
# двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль, находясь перед
#  некоторым кустом заданной во входном файле грядки.

list = []
n = int(input("Введите кол-во кустов: "))
for i in range(n):
    list.append(int(input("Введите кол-во ягод: ")))
new_list = []
for i in range(len(list)):
    summ = 0
    if i == 0:
        summ = list[-1] + list[i] + list[i + 1]
        new_list.append(summ)
    elif i == len(list) - 1:
        summ = list[0] + list[i] + list[i - 1]
        new_list.append(summ)
    else:
        summ = list[i] + list[i + 1] + list[i - 1]
        new_list.append(summ)
new_list.sort()
print(new_list)
print(new_list[-1])